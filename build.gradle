plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.2'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.example.playOn'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.2'
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign:4.2.1'

	// OpenAPI (Swagger) 추가
	implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.1"

	// 외부 api 호출을 위함 (WebClient)
	implementation 'org.springframework.boot:spring-boot-starter-webflux'

	// AWS S3
	implementation 'io.awspring.cloud:spring-cloud-aws-starter:3.3.0'
  	implementation 'software.amazon.awssdk:s3:2.31.11'

	// QueryDSL
	implementation 'com.querydsl:querydsl-jpa:5.1.0:jakarta'
	annotationProcessor 'com.querydsl:querydsl-apt:5.1.0:jakarta'
	annotationProcessor 'jakarta.annotation:jakarta.annotation-api'
	annotationProcessor 'jakarta.persistence:jakarta.persistence-api'

	// spring batch
	implementation 'org.springframework.boot:spring-boot-starter-batch'

	// jackson
	implementation 'com.fasterxml.jackson.core:jackson-databind'

}

tasks.named('test') {
	useJUnitPlatform()
}
